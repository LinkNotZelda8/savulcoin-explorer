{"version":3,"sources":["js/modules/ui/navigation.js","js/modules/api/api_manager.js","js/modules/ui/ui_manager.js","js/modules/storage.js","js/modules/utils/word_generator.js","js/modules/ui/new_account.js","js/modules/ui/new_address.js","js/modules/ui/account.js","js/modules/ui/send_savulcoin.js","js/modules/ui/clipboard.js","js/modules/ui/general.js","js/modules/ui/login.js","js/modules/index.js"],"names":["Navigation","path","template","pages","hasOwnProperty","window","main","nunjucksEnv","render","process","page","location","hash","substring","$","trigger","document","ready","onHashChange","html","navigation","processCurrent","on","e","DEFAULT_NODES","BLOCKCHAIN_CONSTANT","APIManager","nodeUrl","_get","words","callback","_post","password","join","then","result","id","userData","walletId","addresses","totalBalance","address","fetchAddressBalance","balance","addressId","toFixed","fromAddress","toAddress","amount","changeAddress","toastr","success","showDuration","err","error","suppressErrors","getJSON","fail","_error","data","ajax","url","type","JSON","stringify","contentType","dataType","beforeSend","xhr","setRequestHeader","UIManager","element","animate","opacity","prop","title","body","yesCallback","modelId","Math","random","toString","replace","append","modal_id","click","modal","UserData","length","STORAGE_USERDATA_NAME","Storage","load","localStorage","getItem","Object","assign","parse","setItem","text","blob","Blob","saveAs","Date","toLocaleDateString","clear","save","wordList","r","maxLength","a","t","floor","exactly","min","max","wordsPerString","formatter","separator","o","i","n","s","l","push","hide","show","ui","fadeAndDisable","api","createWallet","storage","modalYesNo","export","button","createAddress","val","isLoggedIn","fetchAddresses","done","addressBalance","undefined","parseFloat","int","setInterval","clearInterval","balanceML","logoff","reload","preventDefault","find","formData","formDataRaw","serializeArray","name","value","createTransaction","addressList","fallbackCopyTextToClipboard","textArea","createElement","style","top","left","position","appendChild","focus","select","execCommand","removeChild","copyTextToClipboard","navigator","clipboard","writeText","event","info","login","trim","Main","nunjucks","Environment","addPage","globals"],"mappings":"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AAQ,SAAU,YAAa,YAAa,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,aAAc,QAAS,OAAQ,WAAY,WAAY,WAAY,WAAY,OAAQ,MAAO,WAAY,QAAS,OAAQ,SAAU,QAAS,WAAY,YAAa,WAAY,UAAW,UAAW,YAAa,QAAS,WAAY,SAAU,UAAW,WAAY,QAAS,QAAS,YAAa,YAAa,YAAa,UAAW,UAAW,QAAS,WAAY,UAAW,UAAW,UAAW,UAAW,aAAc,UAAW,WAAY,WAAY,SAAU,WAAY,WAAY,aAAc,QAAS,QAAS,UAAW,SAAU,OAAQ,QAAS,OAAQ,SAAU,UAAW,OAAQ,MAAO,UAAW,UAAW,QAAS,WAAY,QAAS,UAAW,QAAS,UAAW,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,QAAS,MAAO,QAAS,QAAS,UAAW,OAAQ,SAAU,MAAO,OAAQ,QAAS,OAAQ,SAAU,QAAS,OAAQ,UAAW,OAAQ,SAAU,SAAU,UAAW,SAAU,WAAY,YAAa,SAAU,MAAO,QAAS,UAAW,SAAU,UAAW,UAAW,eAAgB,YAAa,SAAU,aAAc,WAAY,SAAU,SAAU,UAAW,UAAW,SAAU,YAAa,UAAW,WAAY,UAAW,OAAQ,SAAU,SAAU,SAAU,QAAS,SAAU,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,OAAQ,SAAU,QAAS,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,MAAO,SAAU,SAAU,OAAQ,QAAS,MAAO,UAAW,OAAQ,MAAO,SAAU,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,aAAc,YAAa,OAAQ,QAAS,MAAO,MAAO,QAAS,SAAU,QAAS,SAAU,UAAW,aAAc,YAAa,QAAS,SAAU,MAAO,SAAU,SAAU,OAAQ,SAAU,SAAU,UAAW,MAAO,OAAQ,SAAU,QAAS,OAAQ,SAAU,SAAU,YAAa,OAAQ,OAAQ,QAAS,OAAQ,WAAY,WAAY,SAAU,UAAW,QAAS,UAAW,OAAQ,UAAW,SAAU,WAAY,QAAS,UAAW,QAAS,SAAU,QAAS,UAAW,QAAS,UAAW,QAAS,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,SAAU,UAAW,QAAS,WAAY,OAAQ,QAAS,OAAQ,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","file":"modules.8157486a.js","sourceRoot":"..","sourcesContent":["export default class Navigation {\n    pages = {}\n    \n\n    addPage(path, template) {\n        this.pages[path] = template;\n    }\n\n    process(path) {\n        if (this.pages.hasOwnProperty(path)) {\n            return window.main.nunjucksEnv.render(this.pages[path]);\n        }\n\n        return this.process(\"/404\");\n    }\n\n    processCurrent() {\n        let page = window.location.hash.substring(1);\n\n        $(\"#app\").trigger(\"render\", page);\n        \n        return this.process(page);\n    }\n}\n$(document).ready(() => {\n    function onHashChange() {\n        $(\"#app\").html(\n            window.main.navigation.processCurrent()\n        );\n    }\n    \n    $(window).on(\"hashchange\", (e) => {\n        onHashChange();\n    });\n\n    onHashChange();\n});\n","const DEFAULT_NODES = [\n    \"https://savul-n2.yapsavun.com\"\n]\n\nconst BLOCKCHAIN_CONSTANT = 100000000;\n\nexport default class APIManager {\n    nodeUrl = null;\n    _nodeList = []\n\n    constructor() {\n        this.nodeUrl = DEFAULT_NODES[0];\n/*\n        this.getPeers().then(list => {\n            this._nodeList = list;\n            this.nodeUrl = \"https://\" + this._nodeList[Math.floor(Math.random() * this._nodeList.length)].url; // Choose random peer from the peer list \n        });   */\n    }\n\n    getPeers() {\n        return this._get(\"/node/peers\");\n    }\n\n    createWallet(words, callback) {\n        this._post(`/operator/wallets`, { password: words.join(\" \") }).then((result) => {\n            callback(result.id);\n        });\n    }\n\n    fetchBalance(userData, callback) {\n        this._get(`/operator/wallets/${userData.walletId}`, (result) => {\n            let addresses = result.addresses;\n\n            var totalBalance = 0;\n            for (const address of addresses) {\n                this.fetchAddressBalance(address, (balance) => { totalBalance += balance });\n            }\n\n            callback(totalBalance / BLOCKCHAIN_CONSTANT);\n        });\n    }\n\n    fetchAddresses(userData, callback) {\n        this._get(`/operator/wallets/${userData.walletId}/addresses`, (result) => {\n            callback(result);\n        });\n    }\n\n    fetchAddressBalance(addressId, callback) {\n        this._get(`/operator/${addressId}/balance`, (result) => {\n            callback(result != null ? (result.balance / BLOCKCHAIN_CONSTANT).toFixed(8) : 0);\n        }, true);\n    }\n\n    createAddress(userData, callback) {\n        this._post(`/operator/wallets/${userData.walletId}/addresses`, { walletId: userData.walletId }, userData.password).then((result) => {\n            callback(result.address);\n        });\n    }\n\n    createTransaction(userData, fromAddress, toAddress, amount, callback) {\n        amount *= BLOCKCHAIN_CONSTANT;\n\n        this._post(`/operator/wallets/${userData.walletId}/transactions`, {\n            fromAddress: fromAddress,\n            toAddress: toAddress,\n            amount: amount,\n            changeAddress: fromAddress\n        }, userData.password).then((result) => {\n            toastr.success(\"İşlem başarıyla gönderildi. 5 dakika ile 1 saat arasında SavulCoin gönderdiğiniz kişiye ulaşacaktır.\", {\n                showDuration: 10000\n            });\n            callback(true);\n        });\n    }\n\n    getTransactionFee() {\n        return 1 / BLOCKCHAIN_CONSTANT;\n    }\n\n    _error(err) {\n        toastr.error(\"İşleminiz yaparken bir hata oluştu. Sonra tekrar deneyin.\");\n    }\n\n    _get(path, callback, suppressErrors=false) {\n        return $.getJSON(this.nodeUrl + path)\n            .then((result) => {\n                callback(result);\n            })\n            .fail((error) => {\n                if (!suppressErrors)\n                    this._error(error);\n                \n                callback(null);\n            });\n    }\n\n    _post(path, data, password=null) {\n        return $.ajax({\n            url: this.nodeUrl + path,\n            type: \"POST\",\n            data: JSON.stringify(data),\n            contentType: \"application/json; charset=utf-8\",\n            dataType: \"json\",\n            beforeSend: (xhr) => {\n                if (password != null)\n                    xhr.setRequestHeader(\"password\", password)\n            }   \n          }).fail((error) => {\n              this._error(error);\n          });\n    }\n}","export default class UIManager {\n    fadeAndDisable(element) {  \n        element.animate({ opacity: 0.5 }, 100); // Fade a little bit\n        element.prop(\"disabled\", true);\n    }\n\n    unfade(element) {\n        element.animate({ opacity: 1 }, 100);\n        element.prop(\"disabled\", false);\n    }\n\n    modalYesNo(title, body, yesCallback) {\n        let modelId = \"modal-\" + Math.random().toString().replace(\".\", \"\"); // Create a random id\n\n        $(\"#main-panel\").append(\n            window.main.nunjucksEnv.render(\"modal-yes-no.html\", { title: title, body: body, modal_id: modelId })\n        );\n\n        $(\"#yes-button-\" + modelId).click(() => {\n            $(\"#\" + modelId).modal(\"hide\");\n            yesCallback();\n        }) \n\n        $(\"#\" + modelId).modal(\"show\");\n    }\n}","class UserData {\n    password = \"\";\n    walletId = \"\";\n\n    isLoggedIn() {\n        return this.walletId.length > 0;\n    }\n}\n\nconst STORAGE_USERDATA_NAME = \"userData\";\n\nexport default class Storage {\n    userData = new UserData(); \n\n    load() { // Load userData;\n        if (window.localStorage.getItem(STORAGE_USERDATA_NAME))\n            this.userData = Object.assign(new UserData(), JSON.parse(window.localStorage.getItem(STORAGE_USERDATA_NAME)));\n    }\n\n    save() {\n        window.localStorage.setItem(STORAGE_USERDATA_NAME, JSON.stringify(this.userData));\n    }\n\n    export() {\n        let text =\n`Hesap şifresi = ${this.userData.password}\nCüzdan ID = ${this.userData.walletId}`;\n\n        var blob = new Blob([text], {type: \"text/plain;charset=utf-8\"});\n\n        saveAs(blob, \"hesap-yedek-\" + new Date().toLocaleDateString() + \".txt\");\n    }\n\n    logoff() {\n        window.localStorage.clear();\n        this.userData = new UserData();\n    }\n\n    login(password, walletId) {\n        this.userData = new UserData();\n        this.userData.password = password;\n        this.userData.walletId = walletId;\n\n        this.save();\n    }\n\n    constructor() {\n        this.load();\n    }\n}","/**\n * Minified by jsDelivr using Terser v3.14.1.\n * Original file: /npm/random-words@1.1.1/index.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\nvar wordList = [\"ability\", \"able\", \"aboard\", \"about\", \"above\", \"accept\", \"accident\", \"according\", \"account\", \"accurate\", \"acres\", \"across\", \"act\", \"action\", \"active\", \"activity\", \"actual\", \"actually\", \"add\", \"addition\", \"additional\", \"adjective\", \"adult\", \"adventure\", \"advice\", \"affect\", \"afraid\", \"after\", \"afternoon\", \"again\", \"against\", \"age\", \"ago\", \"agree\", \"ahead\", \"aid\", \"air\", \"airplane\", \"alike\", \"alive\", \"all\", \"allow\", \"almost\", \"alone\", \"along\", \"aloud\", \"alphabet\", \"already\", \"also\", \"although\", \"am\", \"among\", \"amount\", \"ancient\", \"angle\", \"angry\", \"animal\", \"announced\", \"another\", \"answer\", \"ants\", \"any\", \"anybody\", \"anyone\", \"anything\", \"anyway\", \"anywhere\", \"apart\", \"apartment\", \"appearance\", \"apple\", \"applied\", \"appropriate\", \"are\", \"area\", \"arm\", \"army\", \"around\", \"arrange\", \"arrangement\", \"arrive\", \"arrow\", \"art\", \"article\", \"as\", \"aside\", \"ask\", \"asleep\", \"at\", \"ate\", \"atmosphere\", \"atom\", \"atomic\", \"attached\", \"attack\", \"attempt\", \"attention\", \"audience\", \"author\", \"automobile\", \"available\", \"average\", \"avoid\", \"aware\", \"away\", \"baby\", \"back\", \"bad\", \"badly\", \"bag\", \"balance\", \"ball\", \"balloon\", \"band\", \"bank\", \"bar\", \"bare\", \"bark\", \"barn\", \"base\", \"baseball\", \"basic\", \"basis\", \"basket\", \"bat\", \"battle\", \"be\", \"bean\", \"bear\", \"beat\", \"beautiful\", \"beauty\", \"became\", \"because\", \"become\", \"becoming\", \"bee\", \"been\", \"before\", \"began\", \"beginning\", \"begun\", \"behavior\", \"behind\", \"being\", \"believed\", \"bell\", \"belong\", \"below\", \"belt\", \"bend\", \"beneath\", \"bent\", \"beside\", \"best\", \"bet\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bigger\", \"biggest\", \"bill\", \"birds\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"blank\", \"blanket\", \"blew\", \"blind\", \"block\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"bone\", \"book\", \"border\", \"born\", \"both\", \"bottle\", \"bottom\", \"bound\", \"bow\", \"bowl\", \"box\", \"boy\", \"brain\", \"branch\", \"brass\", \"brave\", \"bread\", \"break\", \"breakfast\", \"breath\", \"breathe\", \"breathing\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"broad\", \"broke\", \"broken\", \"brother\", \"brought\", \"brown\", \"brush\", \"buffalo\", \"build\", \"building\", \"built\", \"buried\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"busy\", \"but\", \"butter\", \"buy\", \"by\", \"cabin\", \"cage\", \"cake\", \"call\", \"calm\", \"came\", \"camera\", \"camp\", \"can\", \"canal\", \"cannot\", \"cap\", \"capital\", \"captain\", \"captured\", \"car\", \"carbon\", \"card\", \"care\", \"careful\", \"carefully\", \"carried\", \"carry\", \"case\", \"cast\", \"castle\", \"cat\", \"catch\", \"cattle\", \"caught\", \"cause\", \"cave\", \"cell\", \"cent\", \"center\", \"central\", \"century\", \"certain\", \"certainly\", \"chain\", \"chair\", \"chamber\", \"chance\", \"change\", \"changing\", \"chapter\", \"character\", \"characteristic\", \"charge\", \"chart\", \"check\", \"cheese\", \"chemical\", \"chest\", \"chicken\", \"chief\", \"child\", \"children\", \"choice\", \"choose\", \"chose\", \"chosen\", \"church\", \"circle\", \"circus\", \"citizen\", \"city\", \"class\", \"classroom\", \"claws\", \"clay\", \"clean\", \"clear\", \"clearly\", \"climate\", \"climb\", \"clock\", \"close\", \"closely\", \"closer\", \"cloth\", \"clothes\", \"clothing\", \"cloud\", \"club\", \"coach\", \"coal\", \"coast\", \"coat\", \"coffee\", \"cold\", \"collect\", \"college\", \"colony\", \"color\", \"column\", \"combination\", \"combine\", \"come\", \"comfortable\", \"coming\", \"command\", \"common\", \"community\", \"company\", \"compare\", \"compass\", \"complete\", \"completely\", \"complex\", \"composed\", \"composition\", \"compound\", \"concerned\", \"condition\", \"congress\", \"connected\", \"consider\", \"consist\", \"consonant\", \"constantly\", \"construction\", \"contain\", \"continent\", \"continued\", \"contrast\", \"control\", \"conversation\", \"cook\", \"cookies\", \"cool\", \"copper\", \"copy\", \"corn\", \"corner\", \"correct\", \"correctly\", \"cost\", \"cotton\", \"could\", \"count\", \"country\", \"couple\", \"courage\", \"course\", \"court\", \"cover\", \"cow\", \"cowboy\", \"crack\", \"cream\", \"create\", \"creature\", \"crew\", \"crop\", \"cross\", \"crowd\", \"cry\", \"cup\", \"curious\", \"current\", \"curve\", \"customs\", \"cut\", \"cutting\", \"daily\", \"damage\", \"dance\", \"danger\", \"dangerous\", \"dark\", \"darkness\", \"date\", \"daughter\", \"dawn\", \"day\", \"dead\", \"deal\", \"dear\", \"death\", \"decide\", \"declared\", \"deep\", \"deeply\", \"deer\", \"definition\", \"degree\", \"depend\", \"depth\", \"describe\", \"desert\", \"design\", \"desk\", \"detail\", \"determine\", \"develop\", \"development\", \"diagram\", \"diameter\", \"did\", \"die\", \"differ\", \"difference\", \"different\", \"difficult\", \"difficulty\", \"dig\", \"dinner\", \"direct\", \"direction\", \"directly\", \"dirt\", \"dirty\", \"disappear\", \"discover\", \"discovery\", \"discuss\", \"discussion\", \"disease\", \"dish\", \"distance\", \"distant\", \"divide\", \"division\", \"do\", \"doctor\", \"does\", \"dog\", \"doing\", \"doll\", \"dollar\", \"done\", \"donkey\", \"door\", \"dot\", \"double\", \"doubt\", \"down\", \"dozen\", \"draw\", \"drawn\", \"dream\", \"dress\", \"drew\", \"dried\", \"drink\", \"drive\", \"driven\", \"driver\", \"driving\", \"drop\", \"dropped\", \"drove\", \"dry\", \"duck\", \"due\", \"dug\", \"dull\", \"during\", \"dust\", \"duty\", \"each\", \"eager\", \"ear\", \"earlier\", \"early\", \"earn\", \"earth\", \"easier\", \"easily\", \"east\", \"easy\", \"eat\", \"eaten\", \"edge\", \"education\", \"effect\", \"effort\", \"egg\", \"eight\", \"either\", \"electric\", \"electricity\", \"element\", \"elephant\", \"eleven\", \"else\", \"empty\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"enjoy\", \"enough\", \"enter\", \"entire\", \"entirely\", \"environment\", \"equal\", \"equally\", \"equator\", \"equipment\", \"escape\", \"especially\", \"essential\", \"establish\", \"even\", \"evening\", \"event\", \"eventually\", \"ever\", \"every\", \"everybody\", \"everyone\", \"everything\", \"everywhere\", \"evidence\", \"exact\", \"exactly\", \"examine\", \"example\", \"excellent\", \"except\", \"exchange\", \"excited\", \"excitement\", \"exciting\", \"exclaimed\", \"exercise\", \"exist\", \"expect\", \"experience\", \"experiment\", \"explain\", \"explanation\", \"explore\", \"express\", \"expression\", \"extra\", \"eye\", \"face\", \"facing\", \"fact\", \"factor\", \"factory\", \"failed\", \"fair\", \"fairly\", \"fall\", \"fallen\", \"familiar\", \"family\", \"famous\", \"far\", \"farm\", \"farmer\", \"farther\", \"fast\", \"fastened\", \"faster\", \"fat\", \"father\", \"favorite\", \"fear\", \"feathers\", \"feature\", \"fed\", \"feed\", \"feel\", \"feet\", \"fell\", \"fellow\", \"felt\", \"fence\", \"few\", \"fewer\", \"field\", \"fierce\", \"fifteen\", \"fifth\", \"fifty\", \"fight\", \"fighting\", \"figure\", \"fill\", \"film\", \"final\", \"finally\", \"find\", \"fine\", \"finest\", \"finger\", \"finish\", \"fire\", \"fireplace\", \"firm\", \"first\", \"fish\", \"five\", \"fix\", \"flag\", \"flame\", \"flat\", \"flew\", \"flies\", \"flight\", \"floating\", \"floor\", \"flow\", \"flower\", \"fly\", \"fog\", \"folks\", \"follow\", \"food\", \"foot\", \"football\", \"for\", \"force\", \"foreign\", \"forest\", \"forget\", \"forgot\", \"forgotten\", \"form\", \"former\", \"fort\", \"forth\", \"forty\", \"forward\", \"fought\", \"found\", \"four\", \"fourth\", \"fox\", \"frame\", \"free\", \"freedom\", \"frequently\", \"fresh\", \"friend\", \"friendly\", \"frighten\", \"frog\", \"from\", \"front\", \"frozen\", \"fruit\", \"fuel\", \"full\", \"fully\", \"fun\", \"function\", \"funny\", \"fur\", \"furniture\", \"further\", \"future\", \"gain\", \"game\", \"garage\", \"garden\", \"gas\", \"gasoline\", \"gate\", \"gather\", \"gave\", \"general\", \"generally\", \"gentle\", \"gently\", \"get\", \"getting\", \"giant\", \"gift\", \"girl\", \"give\", \"given\", \"giving\", \"glad\", \"glass\", \"globe\", \"go\", \"goes\", \"gold\", \"golden\", \"gone\", \"good\", \"goose\", \"got\", \"government\", \"grabbed\", \"grade\", \"gradually\", \"grain\", \"grandfather\", \"grandmother\", \"graph\", \"grass\", \"gravity\", \"gray\", \"great\", \"greater\", \"greatest\", \"greatly\", \"green\", \"grew\", \"ground\", \"group\", \"grow\", \"grown\", \"growth\", \"guard\", \"guess\", \"guide\", \"gulf\", \"gun\", \"habit\", \"had\", \"hair\", \"half\", \"halfway\", \"hall\", \"hand\", \"handle\", \"handsome\", \"hang\", \"happen\", \"happened\", \"happily\", \"happy\", \"harbor\", \"hard\", \"harder\", \"hardly\", \"has\", \"hat\", \"have\", \"having\", \"hay\", \"he\", \"headed\", \"heading\", \"health\", \"heard\", \"hearing\", \"heart\", \"heat\", \"heavy\", \"height\", \"held\", \"hello\", \"help\", \"helpful\", \"her\", \"herd\", \"here\", \"herself\", \"hidden\", \"hide\", \"high\", \"higher\", \"highest\", \"highway\", \"hill\", \"him\", \"himself\", \"his\", \"history\", \"hit\", \"hold\", \"hole\", \"hollow\", \"home\", \"honor\", \"hope\", \"horn\", \"horse\", \"hospital\", \"hot\", \"hour\", \"house\", \"how\", \"however\", \"huge\", \"human\", \"hundred\", \"hung\", \"hungry\", \"hunt\", \"hunter\", \"hurried\", \"hurry\", \"hurt\", \"husband\", \"ice\", \"idea\", \"identity\", \"if\", \"ill\", \"image\", \"imagine\", \"immediately\", \"importance\", \"important\", \"impossible\", \"improve\", \"in\", \"inch\", \"include\", \"including\", \"income\", \"increase\", \"indeed\", \"independent\", \"indicate\", \"individual\", \"industrial\", \"industry\", \"influence\", \"information\", \"inside\", \"instance\", \"instant\", \"instead\", \"instrument\", \"interest\", \"interior\", \"into\", \"introduced\", \"invented\", \"involved\", \"iron\", \"is\", \"island\", \"it\", \"its\", \"itself\", \"jack\", \"jar\", \"jet\", \"job\", \"join\", \"joined\", \"journey\", \"joy\", \"judge\", \"jump\", \"jungle\", \"just\", \"keep\", \"kept\", \"key\", \"kids\", \"kill\", \"kind\", \"kitchen\", \"knew\", \"knife\", \"know\", \"knowledge\", \"known\", \"label\", \"labor\", \"lack\", \"lady\", \"laid\", \"lake\", \"lamp\", \"land\", \"language\", \"large\", \"larger\", \"largest\", \"last\", \"late\", \"later\", \"laugh\", \"law\", \"lay\", \"layers\", \"lead\", \"leader\", \"leaf\", \"learn\", \"least\", \"leather\", \"leave\", \"leaving\", \"led\", \"left\", \"leg\", \"length\", \"lesson\", \"let\", \"letter\", \"level\", \"library\", \"lie\", \"life\", \"lift\", \"light\", \"like\", \"likely\", \"limited\", \"line\", \"lion\", \"lips\", \"liquid\", \"list\", \"listen\", \"little\", \"live\", \"living\", \"load\", \"local\", \"locate\", \"location\", \"log\", \"lonely\", \"long\", \"longer\", \"look\", \"loose\", \"lose\", \"loss\", \"lost\", \"lot\", \"loud\", \"love\", \"lovely\", \"low\", \"lower\", \"luck\", \"lucky\", \"lunch\", \"lungs\", \"lying\", \"machine\", \"machinery\", \"mad\", \"made\", \"magic\", \"magnet\", \"mail\", \"main\", \"mainly\", \"major\", \"make\", \"making\", \"man\", \"managed\", \"manner\", \"manufacturing\", \"many\", \"map\", \"mark\", \"market\", \"married\", \"mass\", \"massage\", \"master\", \"material\", \"mathematics\", \"matter\", \"may\", \"maybe\", \"me\", \"meal\", \"mean\", \"means\", \"meant\", \"measure\", \"meat\", \"medicine\", \"meet\", \"melted\", \"member\", \"memory\", \"men\", \"mental\", \"merely\", \"met\", \"metal\", \"method\", \"mice\", \"middle\", \"might\", \"mighty\", \"mile\", \"military\", \"milk\", \"mill\", \"mind\", \"mine\", \"minerals\", \"minute\", \"mirror\", \"missing\", \"mission\", \"mistake\", \"mix\", \"mixture\", \"model\", \"modern\", \"molecular\", \"moment\", \"money\", \"monkey\", \"month\", \"mood\", \"moon\", \"more\", \"morning\", \"most\", \"mostly\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"mouth\", \"move\", \"movement\", \"movie\", \"moving\", \"mud\", \"muscle\", \"music\", \"musical\", \"must\", \"my\", \"myself\", \"mysterious\", \"nails\", \"name\", \"nation\", \"national\", \"native\", \"natural\", \"naturally\", \"nature\", \"near\", \"nearby\", \"nearer\", \"nearest\", \"nearly\", \"necessary\", \"neck\", \"needed\", \"needle\", \"needs\", \"negative\", \"neighbor\", \"neighborhood\", \"nervous\", \"nest\", \"never\", \"new\", \"news\", \"newspaper\", \"next\", \"nice\", \"night\", \"nine\", \"no\", \"nobody\", \"nodded\", \"noise\", \"none\", \"noon\", \"nor\", \"north\", \"nose\", \"not\", \"note\", \"noted\", \"nothing\", \"notice\", \"noun\", \"now\", \"number\", \"numeral\", \"nuts\", \"object\", \"observe\", \"obtain\", \"occasionally\", \"occur\", \"ocean\", \"of\", \"off\", \"offer\", \"office\", \"officer\", \"official\", \"oil\", \"old\", \"older\", \"oldest\", \"on\", \"once\", \"one\", \"only\", \"onto\", \"open\", \"operation\", \"opinion\", \"opportunity\", \"opposite\", \"or\", \"orange\", \"orbit\", \"order\", \"ordinary\", \"organization\", \"organized\", \"origin\", \"original\", \"other\", \"ought\", \"our\", \"ourselves\", \"out\", \"outer\", \"outline\", \"outside\", \"over\", \"own\", \"owner\", \"oxygen\", \"pack\", \"package\", \"page\", \"paid\", \"pain\", \"paint\", \"pair\", \"palace\", \"pale\", \"pan\", \"paper\", \"paragraph\", \"parallel\", \"parent\", \"park\", \"part\", \"particles\", \"particular\", \"particularly\", \"partly\", \"parts\", \"party\", \"pass\", \"passage\", \"past\", \"path\", \"pattern\", \"pay\", \"peace\", \"pen\", \"pencil\", \"people\", \"per\", \"percent\", \"perfect\", \"perfectly\", \"perhaps\", \"period\", \"person\", \"personal\", \"pet\", \"phrase\", \"physical\", \"piano\", \"pick\", \"picture\", \"pictured\", \"pie\", \"piece\", \"pig\", \"pile\", \"pilot\", \"pine\", \"pink\", \"pipe\", \"pitch\", \"place\", \"plain\", \"plan\", \"plane\", \"planet\", \"planned\", \"planning\", \"plant\", \"plastic\", \"plate\", \"plates\", \"play\", \"pleasant\", \"please\", \"pleasure\", \"plenty\", \"plural\", \"plus\", \"pocket\", \"poem\", \"poet\", \"poetry\", \"point\", \"pole\", \"police\", \"policeman\", \"political\", \"pond\", \"pony\", \"pool\", \"poor\", \"popular\", \"population\", \"porch\", \"port\", \"position\", \"positive\", \"possible\", \"possibly\", \"post\", \"pot\", \"potatoes\", \"pound\", \"pour\", \"powder\", \"power\", \"powerful\", \"practical\", \"practice\", \"prepare\", \"present\", \"president\", \"press\", \"pressure\", \"pretty\", \"prevent\", \"previous\", \"price\", \"pride\", \"primitive\", \"principal\", \"principle\", \"printed\", \"private\", \"prize\", \"probably\", \"problem\", \"process\", \"produce\", \"product\", \"production\", \"program\", \"progress\", \"promised\", \"proper\", \"properly\", \"property\", \"protection\", \"proud\", \"prove\", \"provide\", \"public\", \"pull\", \"pupil\", \"pure\", \"purple\", \"purpose\", \"push\", \"put\", \"putting\", \"quarter\", \"queen\", \"question\", \"quick\", \"quickly\", \"quiet\", \"quietly\", \"quite\", \"rabbit\", \"race\", \"radio\", \"railroad\", \"rain\", \"raise\", \"ran\", \"ranch\", \"range\", \"rapidly\", \"rate\", \"rather\", \"raw\", \"rays\", \"reach\", \"read\", \"reader\", \"ready\", \"real\", \"realize\", \"rear\", \"reason\", \"recall\", \"receive\", \"recent\", \"recently\", \"recognize\", \"record\", \"red\", \"refer\", \"refused\", \"region\", \"regular\", \"related\", \"relationship\", \"religious\", \"remain\", \"remarkable\", \"remember\", \"remove\", \"repeat\", \"replace\", \"replied\", \"report\", \"represent\", \"require\", \"research\", \"respect\", \"rest\", \"result\", \"return\", \"review\", \"rhyme\", \"rhythm\", \"rice\", \"rich\", \"ride\", \"riding\", \"right\", \"ring\", \"rise\", \"rising\", \"river\", \"road\", \"roar\", \"rock\", \"rocket\", \"rocky\", \"rod\", \"roll\", \"roof\", \"room\", \"root\", \"rope\", \"rose\", \"rough\", \"round\", \"route\", \"row\", \"rubbed\", \"rubber\", \"rule\", \"ruler\", \"run\", \"running\", \"rush\", \"sad\", \"saddle\", \"safe\", \"safety\", \"said\", \"sail\", \"sale\", \"salmon\", \"salt\", \"same\", \"sand\", \"sang\", \"sat\", \"satellites\", \"satisfied\", \"save\", \"saved\", \"saw\", \"say\", \"scale\", \"scared\", \"scene\", \"school\", \"science\", \"scientific\", \"scientist\", \"score\", \"screen\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"see\", \"seed\", \"seeing\", \"seems\", \"seen\", \"seldom\", \"select\", \"selection\", \"sell\", \"send\", \"sense\", \"sent\", \"sentence\", \"separate\", \"series\", \"serious\", \"serve\", \"service\", \"sets\", \"setting\", \"settle\", \"settlers\", \"seven\", \"several\", \"shade\", \"shadow\", \"shake\", \"shaking\", \"shall\", \"shallow\", \"shape\", \"share\", \"sharp\", \"she\", \"sheep\", \"sheet\", \"shelf\", \"shells\", \"shelter\", \"shine\", \"shinning\", \"ship\", \"shirt\", \"shoe\", \"shoot\", \"shop\", \"shore\", \"short\", \"shorter\", \"shot\", \"should\", \"shoulder\", \"shout\", \"show\", \"shown\", \"shut\", \"sick\", \"sides\", \"sight\", \"sign\", \"signal\", \"silence\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplest\", \"simply\", \"since\", \"sing\", \"single\", \"sink\", \"sister\", \"sit\", \"sitting\", \"situation\", \"six\", \"size\", \"skill\", \"skin\", \"sky\", \"slabs\", \"slave\", \"sleep\", \"slept\", \"slide\", \"slight\", \"slightly\", \"slip\", \"slipped\", \"slope\", \"slow\", \"slowly\", \"small\", \"smaller\", \"smallest\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"snow\", \"so\", \"soap\", \"social\", \"society\", \"soft\", \"softly\", \"soil\", \"solar\", \"sold\", \"soldier\", \"solid\", \"solution\", \"solve\", \"some\", \"somebody\", \"somehow\", \"someone\", \"something\", \"sometime\", \"somewhere\", \"son\", \"song\", \"soon\", \"sort\", \"sound\", \"source\", \"south\", \"southern\", \"space\", \"speak\", \"special\", \"species\", \"specific\", \"speech\", \"speed\", \"spell\", \"spend\", \"spent\", \"spider\", \"spin\", \"spirit\", \"spite\", \"split\", \"spoken\", \"sport\", \"spread\", \"spring\", \"square\", \"stage\", \"stairs\", \"stand\", \"standard\", \"star\", \"stared\", \"start\", \"state\", \"statement\", \"station\", \"stay\", \"steady\", \"steam\", \"steel\", \"steep\", \"stems\", \"step\", \"stepped\", \"stick\", \"stiff\", \"still\", \"stock\", \"stomach\", \"stone\", \"stood\", \"stop\", \"stopped\", \"store\", \"storm\", \"story\", \"stove\", \"straight\", \"strange\", \"stranger\", \"straw\", \"stream\", \"street\", \"strength\", \"stretch\", \"strike\", \"string\", \"strip\", \"strong\", \"stronger\", \"struck\", \"structure\", \"struggle\", \"stuck\", \"student\", \"studied\", \"studying\", \"subject\", \"substance\", \"success\", \"successful\", \"such\", \"sudden\", \"suddenly\", \"sugar\", \"suggest\", \"suit\", \"sum\", \"summer\", \"sun\", \"sunlight\", \"supper\", \"supply\", \"support\", \"suppose\", \"sure\", \"surface\", \"surprise\", \"surrounded\", \"swam\", \"sweet\", \"swept\", \"swim\", \"swimming\", \"swing\", \"swung\", \"syllable\", \"symbol\", \"system\", \"table\", \"tail\", \"take\", \"taken\", \"tales\", \"talk\", \"tall\", \"tank\", \"tape\", \"task\", \"taste\", \"taught\", \"tax\", \"tea\", \"teach\", \"teacher\", \"team\", \"tears\", \"teeth\", \"telephone\", \"television\", \"tell\", \"temperature\", \"ten\", \"tent\", \"term\", \"terrible\", \"test\", \"than\", \"thank\", \"that\", \"thee\", \"them\", \"themselves\", \"then\", \"theory\", \"there\", \"therefore\", \"these\", \"they\", \"thick\", \"thin\", \"thing\", \"think\", \"third\", \"thirty\", \"this\", \"those\", \"thou\", \"though\", \"thought\", \"thousand\", \"thread\", \"three\", \"threw\", \"throat\", \"through\", \"throughout\", \"throw\", \"thrown\", \"thumb\", \"thus\", \"thy\", \"tide\", \"tie\", \"tight\", \"tightly\", \"till\", \"time\", \"tin\", \"tiny\", \"tip\", \"tired\", \"title\", \"to\", \"tobacco\", \"today\", \"together\", \"told\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"too\", \"took\", \"tool\", \"top\", \"topic\", \"torn\", \"total\", \"touch\", \"toward\", \"tower\", \"town\", \"toy\", \"trace\", \"track\", \"trade\", \"traffic\", \"trail\", \"train\", \"transportation\", \"trap\", \"travel\", \"treated\", \"tree\", \"triangle\", \"tribe\", \"trick\", \"tried\", \"trip\", \"troops\", \"tropical\", \"trouble\", \"truck\", \"trunk\", \"truth\", \"try\", \"tube\", \"tune\", \"turn\", \"twelve\", \"twenty\", \"twice\", \"two\", \"type\", \"typical\", \"uncle\", \"under\", \"underline\", \"understanding\", \"unhappy\", \"union\", \"unit\", \"universe\", \"unknown\", \"unless\", \"until\", \"unusual\", \"up\", \"upon\", \"upper\", \"upward\", \"us\", \"use\", \"useful\", \"using\", \"usual\", \"usually\", \"valley\", \"valuable\", \"value\", \"vapor\", \"variety\", \"various\", \"vast\", \"vegetable\", \"verb\", \"vertical\", \"very\", \"vessels\", \"victory\", \"view\", \"village\", \"visit\", \"visitor\", \"voice\", \"volume\", \"vote\", \"vowel\", \"voyage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"want\", \"war\", \"warm\", \"warn\", \"was\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"way\", \"we\", \"weak\", \"wealth\", \"wear\", \"weather\", \"week\", \"weigh\", \"weight\", \"welcome\", \"well\", \"went\", \"were\", \"west\", \"western\", \"wet\", \"whale\", \"what\", \"whatever\", \"wheat\", \"wheel\", \"when\", \"whenever\", \"where\", \"wherever\", \"whether\", \"which\", \"while\", \"whispered\", \"whistle\", \"white\", \"who\", \"whole\", \"whom\", \"whose\", \"why\", \"wide\", \"widely\", \"wife\", \"wild\", \"will\", \"willing\", \"win\", \"wind\", \"window\", \"wing\", \"winter\", \"wire\", \"wise\", \"wish\", \"with\", \"within\", \"without\", \"wolf\", \"women\", \"won\", \"wonder\", \"wonderful\", \"wood\", \"wooden\", \"wool\", \"word\", \"wore\", \"work\", \"worker\", \"world\", \"worried\", \"worry\", \"worse\", \"worth\", \"would\", \"wrapped\", \"write\", \"writer\", \"writing\", \"written\", \"wrong\", \"wrote\", \"yard\", \"year\", \"yellow\", \"yes\", \"yesterday\", \"yet\", \"you\", \"young\", \"younger\", \"your\", \"yourself\", \"youth\", \"zero\", \"zebra\", \"zipper\", \"zoo\", \"zulu\"];\n\nexport default function words(e) {\n    function r() {\n        return e && e.maxLength > 1 ? function() {\n            var r, a = !1;\n            for (; !a;)(r = t()).length <= e.maxLength && (a = !0);\n            return r\n        }() : t()\n    }\n\n    function t() {\n        return wordList[a(wordList.length)]\n    }\n\n    function a(e) {\n        return Math.floor(Math.random() * e)\n    }\n    if (void 0 === e) return r();\n    \"number\" == typeof e && (e = {\n        exactly: e\n    }), e.exactly && (e.min = e.exactly, e.max = e.exactly), \"number\" != typeof e.wordsPerString && (e.wordsPerString = 1), \"function\" != typeof e.formatter && (e.formatter = (e => e)), \"string\" != typeof e.separator && (e.separator = \" \");\n    for (var o = e.min + a(e.max + 1 - e.min), i = [], n = \"\", s = 0, l = 0; l < o * e.wordsPerString; l++) s === e.wordsPerString - 1 ? n += e.formatter(r(), s) : n += e.formatter(r(), s) + e.separator, s++, (l + 1) % e.wordsPerString == 0 && (i.push(n), n = \"\", s = 0);\n    return \"string\" == typeof e.join && (i = i.join(e.join)), i\n}","\nimport words from \"../utils/word_generator.js\";\n\n// new-account.html\nvar wordList = [];\n\n$(document).on(\"click\", \"#create-new-wallet\", function () {\n    wordList = words(12);\n\n    $(this).hide();\n\n    $(\"#create-wallet-1\").show();\n    $(\"#create-wallet-1 textarea\").html(wordList.join(\" \"));\n})\n\n$(document).on(\"click\", \"#create-new-wallet-api\", function() {\n    window.main.ui.fadeAndDisable($(\"#create-wallet-1\"));\n    window.main.ui.fadeAndDisable($(this));\n    \n    window.main.api.createWallet(wordList, (id) => {\n        window.main.storage.userData.walletId = id;\n        window.main.storage.userData.password = wordList.join(\" \");\n        window.main.storage.save();\n\n        $(\"#create-wallet-1\").hide();\n        $(\"#create-wallet-2\").show(); // Done.\n\n        window.main.ui.modalYesNo(\"Bilgi\", \"Hemen şimdi hesap yedeği almak ister misiniz?\", () => {\n            window.main.storage.export();\n        })\n    });\n})","$(document).on(\"click\", \"#create-new-address\", function () {\n    var button = $(this);\n\n    window.main.ui.fadeAndDisable(button);\n\n    window.main.api.createAddress(window.main.storage.userData, (address) => {\n        button.hide();\n        $(\"#create-address-1\").show();\n        $(\"#create-address-1 input\").val(address);\n    })\n});","$(\"#app\").on(\"render\", (e, page) => {\n    if (page !== \"/hesap\") {\n        return;\n    }\n\n    if (!window.main.storage.userData.isLoggedIn()) {\n        return;\n    }\n\n    function displayAccountData() {\n        window.main.api.fetchAddresses(window.main.storage.userData, (addresses) => {\n            var done = 0;\n            var totalBalance = 0;\n            var addressBalance = {};\n    \n            for (const address of addresses) {\n                window.main.api.fetchAddressBalance(address, (balance) => {\n                    if (balance === undefined)\n                        balance = 0;\n                        \n                    done ++;\n                    totalBalance += parseFloat(balance);\n                    addressBalance[address] = balance;\n                });\n            }\n    \n            var int = setInterval(() => { // Check regularly if requests are done\n                if (done === addresses.length) { // If so render \n                    clearInterval(int);\n                    \n                    $(\"#account-balance\").html(\n                        window.main.nunjucksEnv.render(\"element-account-balance.html\", { balance: totalBalance, balanceML: totalBalance / 1000000 })\n                    );\n                    \n                    $(\"#account-addresses\").html(\n                        window.main.nunjucksEnv.render(\"element-account-addresses.html\", { addresses: addresses, addressBalance: addressBalance })\n                    );\n                }\n            }, 200);\n        });\n    }\n\n    displayAccountData();\n}) \n\n$(document).on(\"click\", \"#backup-account\", () => {\n    window.main.ui.modalYesNo(\"Uyarı\", \"Hesabınızı yedeklemek istediğinize emin misiniz? <strong>Bu yedeğe sahip herkes hesabınıza erişebilir.</strong>\", () => {\n        window.main.storage.export();\n    });\n});\n\n$(document).on(\"click\", \"#log-off\", () => {\n    window.main.ui.modalYesNo(\"Uyarı\", \"Emin misiniz? <strong>Eğer yedeğiniz yoksa hesabınızı SONSUZA KADAR kaybedeceksiniz!</strong>\", () => {\n        window.main.storage.logoff();\n        window.location.reload();\n    });\n});","$(document).on(\"submit\", \"#send-savulcoin-form\", function (e) {\n    e.preventDefault();\n    let button = $(this).find(\"button\");\n    let formDataRaw = $(this).serializeArray();\n    let formData = {}\n\n    for (const data of formDataRaw) {\n        formData[data.name] = data.value;\n    }\n\n    window.main.ui.fadeAndDisable(button);\n    window.main.api.createTransaction(window.main.storage.userData, formData.fromAddress, formData.toAddress, parseFloat(formData.amount), (result) => {\n        if (result)\n            window.location.hash = \"#/hesap\"; // Return to homepage if the action was successful\n    });\n});\n\n$(\"#app\").on(\"render\", (e, page) => {\n    if (page !== \"/savulcoin-gonder\") {\n        return;\n    }\n\n    window.main.api.fetchAddresses(window.main.storage.userData, (addresses) => {\n        $(\"#send-savulcoin-form-container\").html(\n            window.main.nunjucksEnv.render(\"element-send-savulcoin.html\", { addressList: addresses })\n        );\n    });\n})","function fallbackCopyTextToClipboard(text) {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    \n    // Avoid scrolling to bottom\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n  \n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n  \n    try {\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n    } catch (err) {\n    }\n  \n    document.body.removeChild(textArea);\n  }\n\nexport default function copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return;\n    }\n    navigator.clipboard.writeText(text).then(function() {\n    }, function(err) {\n    });\n}","import copyTextToClipboard from \"./clipboard.js\";\n\n$(document).on(\"click\", \"[data-copy-to-clipboard]\", function(event) {\n    copyTextToClipboard($(this).data(\"copy-to-clipboard\"));\n    toastr.info(\"Kopyalandı!\");\n});","$(document).on(\"submit\", \"#login-form\", function (e) {\n    e.preventDefault();\n    \n    let button = $(this).find(\"button\");\n    let formDataRaw = $(this).serializeArray();\n    let formData = {}\n\n    for (const data of formDataRaw) {\n        formData[data.name] = data.value;\n    }\n\n    window.main.ui.fadeAndDisable(button);\n    window.main.storage.login(formData[\"password\"].trim(), formData[\"walletId\"].trim());\n    window.location.hash = \"#/hesap\";\n    \n    window.location.reload();\n});","import Navigation from \"./ui/navigation.js\";\nimport APIManager from \"./api/api_manager.js\";\nimport UIManager from \"./ui/ui_manager.js\";\nimport Storage from \"./storage.js\";\n\nimport \"./ui/new_account.js\";\nimport \"./ui/new_address.js\";\nimport \"./ui/account.js\";\nimport \"./ui/send_savulcoin.js\";\nimport \"./ui/general.js\";\nimport \"./ui/login.js\";\n\nclass Main {\n    api = new APIManager(); \n    navigation = new Navigation();\n    nunjucksEnv = new nunjucks.Environment();\n    storage = new Storage();\n    ui = new UIManager();\n\n    constructor() {\n        this.navigation.addPage(\"\", \"index.html\");\n        this.navigation.addPage(\"/\", \"index.html\");\n        this.navigation.addPage(\"/404\", \"404.html\");\n        this.navigation.addPage(\"/yeni-hesap\", \"new-account.html\");\n        this.navigation.addPage(\"/yeni-adres\", \"new-address.html\");\n        this.navigation.addPage(\"/savulcoin-gonder\", \"send-savulcoin.html\");\n        this.navigation.addPage(\"/hesap\", \"account.html\");\n        this.navigation.addPage(\"/giris-yap\", \"login.html\");\n\n        this.nunjucksEnv.globals[\"userData\"] = this.storage.userData;\n    }\n}\n\nwindow.main = new Main();"]}